#+TITLE:	Date Dimension
#+SUBTITLE:	Log
#+OPTIONS:	toc:nil num:nil
#+STARTUP:	indent show3levels
#+CATEGORY:	Projects
#+TAGS:		log python datawarehouse datedimension

* Tuesday, November 19, 2024
** Day Name Abbreviation Column

** Solution
*** PostgreSQL
- Where ~INTERVAL~ is used
* Sunday, November 17, 2024
** Virtual Environments
- Switched Virtual Environment Manager From PipEnv to PDM
** Issues
*** Week Definitions
**** ISO (European)
- January 1st is in Week One, Weeks start on Monday
**** Non-ISO
1. First full week is Week One, partial week is Week Zero
2. First week with a Thursday (ISO) or January 4th is Week One, partial week is Week Zero
*** ISO Week Numbers vs Normal Week Numbers
- ISO Week Numbers in ~dim_date~ are correct
- Week Numbers in ~dim_date~ are wrong (these are the ones I created)
**** Normal Week Numbers
- Incorrect calculation--Week ends on Monday, not Saturday
- Week number should have been calculated by adding a day, not subtracting (this seems counter-intuitive)
** Comparing Week Numbers in PSQL and Python
- Week numbers appear to be correct, but Week IDs are still incorrect (on Sundays and Mondays)
*** Python
- ~datetime.strftime("%U")~ provides "normal" weeks
- ~datetime.strftime("%W")~ provides ISO weeks
*** PostgreSQL
*** Pendulum
- Week numbers are ISO-based
** New Date Dimension Script
*** Python
**** Columns
#+begin_example sql
id, date_id, epoch, day_suffix, day_name, day_of_week, day_of_week_iso, day_of_month,
day_of_quarter, day_of_year, week_id, week_id_iso, week_name, week_name_iso, week_of_month,
week_of_year, week_of_year_id, week_of_year_iso, week_of_year_iso_id, month_of_year,
month_name, month_name_abbreviated, quarter_of_year, quarter_name, quarter_id, yyyy,
first_day_of_week, last_day_of_week, first_day_of_week_iso, last_day_of_week_iso,
first_day_of_month, last_day_of_month, first_day_of_quarter, last_day_of_quarter,
first_day_of_year, last_day_of_year, mmyyyy, mmddyyyy, weekend_indr
#+end_example

* Saturday, December 10, 2022
:LOGBOOK:
CLOCK: [2022-12-10 Sat 11:15]--[2022-12-10 Sat 12:30] =>  1:15
:END:
** Installed SQLAcodegen
- It doesn't work in Python-3.11 or when installed with ~pipx~, so I installed it system-wide under Python-3.10, and it works
- Copied the model it generated to ~models.py~
** Used Alembic to Generate the ~dim_date~ table in ~demodb~
- This was a test, since ~dim_date~ already exists in ~developmentdb~
- Ran ~dim_date.sql~ to populate the table

* Saturday, November 26, 2022
:LOGBOOK:
CLOCK: [2022-11-26 Sat 16:15]--[2022-11-26 Sat 17:15] =>  1:00
CLOCK: [2022-11-26 Sat 10:15]--[2022-11-26 Sat 12:45] =>  2:30
:END:
- I was ready to re-do the entire date dimension logic in Python, but I may just update the week-related columns with Python
- After tweaking the ~dim_date.sql~ script, it appears that I did get the week stuff correct--it appears that there is nothing that needs to be done, here




